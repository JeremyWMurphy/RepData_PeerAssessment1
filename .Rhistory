head(dat)
tail(dat)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = TRUE, sep = ";", na.strings = "?", nrows = 46079, skip = 23437)
head(dat)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", nrows = 46079, skip = 23436)
head(dat)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", nrows = 46079, skip = 23437)
head(dat)
tail(dat)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", nrows = 46080, skip = 23437)
head(dat)
head(tail)
tail(dat)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", nrows = 46081, skip = 23437)
head(dat)
tail(dat)
?read.table
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = read.table(file = fname, header = FALSE, sep = ";", nrows = 1), nrows = 46080, skip = 23437)
head(dat)
x<-read.table(file = fname, header = FALSE, sep = ";", nrows = 1)
x
as.character(x)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = read.table(file = fname, header = TRUE, sep = ";", nrows = 1), nrows = 46080, skip = 23437)
head(dat)
read.table(file = fname, header = TRUE, sep = ";", nrows = -1)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
head(dat)
?strptime
strptime(dat$Time, format = "%H:%M:%S")
head(dat)
class(dat%Time)
class(dat$Time)
head(dat)
dat$Date<-as.Date(dat$Date)
dat$Time<-as.Date(dat$Time)
class(dat$Date)
class(dat$Time)
dat$Date<-as.Date(dat$Date)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
class(dat$Date)
class(dat$Time)
strptime(as.character(dat$Time),format = "%H:%M:%S")
head(dat)
strptime(as.character(c(dat$Date,dat$Time),format = "%m-%d-%Y %H:%M:%S")
)
strptime(as.character(c(dat$Date,dat$Time)),format = "%m-%d-%Y %H:%M:%S")
as.character(c(dat$Date,dat$Time))
(c(dat$Date,dat$Time)
)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
(c(dat$Date,dat$Time))
as.T
dat%Date
dat$Date
class(dat$Date)
as.character(dat$Date)
c(as.character(dat$Date), as.character(dat$Time))
sapply(c(as.character(dat$Date), as.character(dat$Time)))
as.date
?as.date
?as.Date
dat <- within(dat,datetime<-paste(Date,Time))
head(dat)
?within
class(dat%datetime)
class(dat$datetime)
?strptime
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
dat$datetime <- paste(Date,Time)
dat$datetime <- paste(dat$Date,dat$Time)
head(dat)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
dat$Date <- as.Date(dat$Date)
head(dat)
?as.Date
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
dat$Date <- as.Date(dat$Date,format = "%m/%d/%Y")
head(dat)
dat$datetime <- paste(dat$Date,dat$Time)
head(dat)
strptime(dat$datetime)
?strptime
strptime(dat$datetime,format = "%Y-%m-%d %H:%M:%S)
""
)
x""
strptime(dat$datetime,format = "%Y-%m-%d %H:%M:%S")
head(dat)
dat%datetime
dat$datetime
dat$Date
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
dat$Date <- as.Date(dat$Date,format = "%d/%m/%Y")
dat$Date
head(dat$Date)
dat$Date[c(1:10)]
dat$Date[c(1:100)]
dat$Date[c(1:1000)]
dat$Date[c(1000:2000)]
head(dat)
tail(dat)
head(dat)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
head(dat)
fname <- "C:/Users/Jeremy/Documents/coursera_data_science/explor_data/Assignment 1//household_power_consumption.txt"
dat <- read.table(file = fname, header = FALSE, sep = ";", na.strings = "?", col.names = colnames(read.table(file = fname, header = TRUE, sep = ";", nrows = 1)), nrows = 46080, skip = 23437)
dat$Date <- as.Date(dat$Date,format = "%m/%d/%Y")
head(dat)
tail(dat)
hist(dat$global_active_power )
hist(dat$Global_active_power )
library(nlme)
library(lattice)
ls()
dir()
xyplot(weight ~ Time | Diet, BodyWeight)
Diet
BodyWeight
str(BodyWeight)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2, 1))  ## Plot with 2 panels
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
?panel
ls()
dir()
library(datasets)
data()
data(airquality)
ls()
str(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
p <- g + geom_point
p <- g + geom_point()
print(p)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
as.character(date)
library("ggplot2")
library("dplyr")
unzip("activity.zip")
df <- read.table("activity.csv", header = T, sep = ",", na.strings = "NA")
setwd("GitHub/RepData_PeerAssessment1/")
library("ggplot2")
library("dplyr")
unzip("activity.zip")
df <- read.table("activity.csv", header = T, sep = ",", na.strings = "NA")
head(df)
# the date data
df$date <- as.Date(df$date, "%Y-%m-%d")
# the time interval data
df <- mutate(df, H = interval %/% 100, M = interval %% 100) # use dplyr to cut hours and minutes.
time <- paste(as.character(df$date),df$H,df$M,sep = ":")
time <- strptime(time,"%Y-%m-%d:%H:%M")
df$posixtime <- time
stepsXday <- aggregate(steps ~ as.character(date), df, sum)
stepsXday
stepsXday <- aggregate(steps ~ date, df, sum)
stepsXday
p <- ggplot(stepsXday,aes(date,steps))
p <- p + geom_histogram(stat = "identity",
binwidth = 1, aes(fill = steps)) + scale_fill_gradient("Count",
low = "blue", high = "red")
p <- p + scale_x_date(breaks = "1 week", minor_breaks = "1 day") +
labs(title = "Total steps per day",x = "Date", y = "Steps")
p <- p + theme_bw()
print(p)
?scale_x_continuous
max(df$H)
stepsXtime <- aggregate(steps ~ H, df, mean)
p <- ggplot(stepsXtime, aes(H,steps)) + geom_line()
p <- p + labs(title = "Mean number of steps throughout the day", x = "Time (hours)", y = "Steps") +
scale_x_continuous(limits = c(0,23), breaks = 0:23) + theme_bw()
print(p)
colours()
stepsXtime <- aggregate(steps ~ H, df, mean)
p <- ggplot(stepsXtime, aes(H,steps)) + geom_line(size = 1, color = "aquamarine")
p <- p + labs(title = "Mean number of steps throughout the day", x = "Time (hours)", y = "Steps") +
scale_x_continuous(limits = c(0,23), breaks = 0:23) + theme_bw()
print(p)
head(df)
is.na(df[,1])
length(is.na(df[,1]))
?is.na
length(which(is.na(df[,1]))
)
?subset
summary(df)
q<- aggregate(df, list(steps,date), Fun = function(x) if is.na(x) x <- median(y))
q<- aggregate(df, list(steps,date), f(x) if is.na(x) x <- median(y))
q<- aggregate(df, list(steps,date), f(x) = if is.na(x) x <- median(y))
q<- aggregate(df, list(steps,date), Fun = function(x), if is.na(x) x <- median(y))
q<- aggregate(df, list(steps,date), Fun = function(if is.na(x) x <- median(y))
which(is.na(df[,1]))
?aggregate
head(df)
for (i in which(is.na(df[,1])) {
test <- aggregate(df,list(date==df[i,2]),median)
}
for (i in which(is.na(df[,1]))) {
test <- aggregate(df,list(date==df[i,2]),median)
}
i
for (i in which(is.na(df[,1]))) {
date_tmp <- df[i,2]
test[i] <- aggregate(df,list(steps,date==date_tmp),median)
}
head(df)
for (i in which(is.na(df[,1]))) {
date_tmp <- df[i,2]
test[i] <- aggregate(df,list(df$steps,df$date==date_tmp),median)
}
test
test <- vector
for (i in which(is.na(df[,1]))) {
date_tmp <- df[i,2]
test[i] <- aggregate(df,list(df$steps,df$date==date_tmp),median)
}
date_tmp
aggregate(df,list(df$steps,df$date==date_tmp),median)
aggregate(df$steps,list(df$steps,df$date==date_tmp),median)
aggregate(df,list(df$steps,df$date==date_tmp),median)
which(is.na(df[,1]))
aggregate(steps ~ date, df, FUN = function(x,y) if (is.na(x)) x = median(y)
)
warnings()
aggregate(steps ~ date, df, median)
?na.exclude
?dplyr
browseVignettes(package = "dplyr")
by_date <- group_by(df,date)
library("ggplot2")
library("dplyr")
unzip("activity.zip")
df <- read.table("activity.csv", header = T, sep = ",", na.strings = "NA")
# the date data
df$date <- as.Date(df$date, "%Y-%m-%d")
# the time interval data
df <- mutate(df, H = interval %/% 100, M = interval %% 100) # use dplyr to cut hours and minutes.
by_date <- group_by(df,date)
head(by_date)
?apply
?filter
?reduce
summarize(by_date,median)
?summarize
summarize(by_date,median(steps))
summarize(by_date,median(steps,na.rm = TRUE))
?MEDIAN
?median
length(df)
i = 1
df[i,2]
date_idx <- which(df[,2] == df[i,2])
date_idx
?mean
for (i in nrow(df)){
date_idx <- which(df[,2] == df[i,2])
if (is.na(df[i,1])) {
df[i,1] <- median(df[date_idx,1], na.rm = TRUE)
}
}
df[,1]
head(df)
date_idx
median(df[date_idx,1])
median(df[date_idx,1],na.rm = False)
median(df[date_idx,1],na.rm = FALSE)
median(df[date_idx,1],na.ignore = TRUE)
mean(df[date_idx,1],na.rm = TRUE)
mean(df[date_idx,1],na.rm = FALS)
mean(df[date_idx,1],na.rm = FALSE)
x <- c(na,na,na)
x <- c(NA,NA,NA)
x
mean(x)
mean(x,na.exclude=TRUE)
mean(x,na.rm = TRUE)
x <- c(5,NA,NA)
mean(x,na.rm = TRUE)
for (i in nrow(df)){
date_idx <- which(df[,2] == df[i,2])
if length(which(is.na(df[date_idx])))
if (is.na(df[i,1])) {
df[i,1] <- median(df[date_idx,1], na.rm = TRUE)
if (is.na(df[i,1])){
df[i,1] <- 0
}
}
}
or (i in nrow(df)){
date_idx <- which(df[,2] == df[i,2])
if length(which(is.na(df[date_idx])))
if (is.na(df[i,1])) {
df[i,1] <- median(df[date_idx,1], na.rm = TRUE)
if (is.na(df[i,1])){
df[i,1] <- 0
}
}
}
for (i in nrow(df)){
date_idx <- which(df[,2] == df[i,2])
if (is.na(df[i,1])) {
df[i,1] <- median(df[date_idx,1], na.rm = TRUE)
if (is.na(df[i,1])){ # if it's still NA, then there were no good values
df[i,1] <- 0
}
}
}
df[,1]
df[9976,1] <- 1
df[,1]
nrow(df)
summary(df)
date_idx
median(df[date_idx,1], na.rm = TRUE)
head(df)
for (i in nrow(df)){
date_idx <- which(df[,2] == df[i,2])
if (is.na(df[i,1])) {
df[i,1] <- median(df[date_idx,1], na.rm = TRUE)
if (is.na(df[i,1])){ # if it's still NA, then there were no good values
df[i,1] <- 0
}
}
}
head(df)
date_idx
median(df[date_idx,1], na.rm = TRUE)
i
is.na(df[i,1])
df[i,1]
tail(df)
i = 1
i
date_idx <- which(df[,2] == df[i,2])
date_idx
is.na(df[i,1])
df[date_idx,1]
median(df[date_idx,1], na.rm = TRUE)
if (is.na(df[i,1])){ # if it's still NA, then there were no good values
df[i,1] <- 0
}
df[i,1]
head(df)
for (i in nrow(df)){
date_idx <- which(df[,2] == df[i,2])
if (is.na(df[i,1])) {
df[i,1] <- median(df[date_idx,1], na.rm = TRUE)
}
if (is.na(df[i,1])){ # if it's still NA, then there were no good values
df[i,1] <- 0
}
}
head(df)
for (i in 1:nrow(df)){
date_idx <- which(df[,2] == df[i,2])
if (is.na(df[i,1])) {
df[i,1] <- median(df[date_idx,1], na.rm = TRUE)
}
if (is.na(df[i,1])){ # if it's still NA, then there were no good values
df[i,1] <- 0
}
}
head(df)
summary(df)
stepsXday <- aggregate(steps ~ date, df, sum)
p <- ggplot(stepsXday,aes(date,steps))
p <- p + geom_histogram(stat = "identity",
binwidth = 1, aes(fill = steps)) + scale_fill_gradient("Count",
low = "blue", high = "red")
p <- p + scale_x_date(breaks = "1 week", minor_breaks = "1 day") +
labs(title = "Total steps per day",x = "Date", y = "Steps")
p <- p + theme_bw()
print(p)
?weekdays
head(df)
weekdays(df$date)
weekdays(df$date,abbreviate)
weekdays(df$date,abbreviate=TRUE)
x<-as.factor(weekdays(df$date,abbreviate=TRUE))
summary(x)
?gsub
grep("S",x)
summary(x)
2592*2
2304+2592
2304+2304
grep(["Sun|Sat",days)
grep(["Sun|Sat"],days)
grep("Sun|Sat",days)
days<-weekdays(df$date,abbreviate=TRUE))
grep("Sun|Sat",days)
days
days<-weekdays(df$date,abbreviate=TRUE))
days<-weekdays(df$date,abbreviate=TRUE)
grep("Sun|Sat",days)
summary(days)
days
unique(days)
days<-weekdays(df$date,abbreviate=TRUE)
weekdayidx <- grep("Mon|Tue|Wed|Thu|Fri",days)
weekendidx <- grep("Sat|Sun",days)
days[weekdayidx] <- "weekday"
days[weekdayidx] <- "weekend
""
"
days<-weekdays(df$date,abbreviate=TRUE)
weekdayidx <- grep("Mon|Tue|Wed|Thu|Fri",days)
weekendidx <- grep("Sat|Sun",days)
days[weekdayidx] <- "weekday"
days[weekdayidx] <- "weekend"
days
days<-weekdays(df$date,abbreviate=TRUE)
weekdayidx <- grep("Mon|Tue|Wed|Thu|Fri",days)
weekendidx <- grep("Sat|Sun",days)
days[weekdayidx] <- "weekday"
days[weekendidx] <- "weekend"
days
?as.factor
days<-weekdays(df$date,abbreviate=TRUE)
weekdayidx <- grep("Mon|Tue|Wed|Thu|Fri",days)
weekendidx <- grep("Sat|Sun",days)
days[weekdayidx] <- "weekday"
days[weekendidx] <- "weekend"
df$days <- as.factor(days)
summary(df)
stepsXtime <- aggregate(steps ~ interval, df, mean)
stepsXtime
stepsXtime_wkd <- aggregate(steps ~ interval, df[days=="weekday",], mean)
stepsXtime_wkend <- aggregate(steps ~ interval, df[days=="weekend",], mean)
stepsXtime_wkd
stepsXtime_wkend
steps$interval<- stepsXtime_wkd$interval
steps <- data.frame
steps
steps$interval<- stepsXtime_wkd$interval
?data.frame
steps<-data.frame(interval = stepsXtime_wkd$interval, weekday = stepsXtime_wkd$steps,weekend = stepsXtime_wkend$steps)
steps
stepsXtime_wkd <- aggregate(steps ~ interval, df, mean)
steps <- aggregate(steps ~ interval, df, mean)
head(steps)
steps <- aggregate(df, list(steps,interval), mean)
steps <- aggregate(df, list(df$steps,df$interval), mean)
df
steps <- aggregate(df, list(df$steps,df$interval), mean)
warnings()
steps
stepsXtime_wkd <- aggregate(steps ~ interval, df[days=="weekday",], mean)
stepsXtime_wkend <- aggregate(steps ~ interval, df[days=="weekend",], mean)
steps<-data.frame(interval = stepsXtime_wkd$interval, weekday = stepsXtime_wkd$steps,weekend = stepsXtime_wkend$steps)
steps
g<-ggplot(steps)
?facet_grid
?summarize
summarise(group_by(interval,days),mean(steps))
summarise(group_by(df$interval,df$days),mean(steps))
summarise(group_by(df,df$days),mean(steps))
summarise(group_by(df,days),mean(steps))
summarise(group_by(df,interval,days),mean(steps))
x <- summarise(group_by(df,interval,days),mean(steps))
summary(x)
byday <- summarise(group_by(df,interval,days),steps = mean(steps))
head(byday)
byday <- summarise(group_by(df,interval,days),steps = mean(steps))
p <- ggplot(byday, aes(interval,steps)) + geom_line()
p <- p + facetgrid(days ~.)
p <- p + labs(title = "Mean number of steps throughout the day", x = "Interval", y = "Steps")
print(p)
byday <- summarise(group_by(df,interval,days),steps = mean(steps))
p <- ggplot(byday, aes(interval,steps)) + geom_line()
p <- p + facet_grid(days ~.)
p <- p + labs(title = "Mean number of steps throughout the day", x = "Interval", y = "Steps")
print(p)
head(df)
